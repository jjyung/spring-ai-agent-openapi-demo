/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.10.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.client;

import com.example.model.dto.generated.order.BuyRequestDTO;
import com.example.model.dto.generated.order.CommonResponseDTO;
import com.example.model.dto.generated.order.SellRequestDTO;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.10.0")
@Validated
@Tag(name = "Order", description = "the Order API")
public interface OrderApi {

    /**
     * POST /api/buy : 下單買進
     * 下單買進
     *
     * @param buyRequestDTO  (optional)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "postApiBuy",
        summary = "下單買進",
        description = "下單買進",
        tags = { "Order" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CommonResponseDTO.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/buy",
        produces = { "application/json" },
        consumes = "application/json"
    )
    
    ResponseEntity<CommonResponseDTO> postApiBuy(
        @Parameter(name = "BuyRequestDTO", description = "") @Valid @RequestBody(required = false) BuyRequestDTO buyRequestDTO
    ) throws Exception;


    /**
     * POST /api/sell : 下單買進
     * 下單賣出ㄇ
     *
     * @param sellRequestDTO  (optional)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "postApiSell",
        summary = "下單買進",
        description = "下單賣出ㄇ",
        tags = { "Order" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CommonResponseDTO.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/sell",
        produces = { "application/json" },
        consumes = "application/json"
    )
    
    ResponseEntity<CommonResponseDTO> postApiSell(
        @Parameter(name = "SellRequestDTO", description = "") @Valid @RequestBody(required = false) SellRequestDTO sellRequestDTO
    ) throws Exception;

}
