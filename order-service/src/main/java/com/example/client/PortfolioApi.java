/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.10.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.example.client;

import com.example.model.dto.generated.portfolio.CommonResponseDTO;
import com.example.model.dto.generated.portfolio.GetPortfolioResponseDTO;
import com.example.model.dto.generated.portfolio.PutPortfollioRequestDTO;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import jakarta.validation.Valid;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import java.util.List;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", comments = "Generator version: 7.10.0")
@Validated
@Tag(name = "Portfolio", description = "the Portfolio API")
public interface PortfolioApi {

    /**
     * GET /api/portfolio/{account} : 查詢帳號庫存
     * 查詢帳號庫存
     *
     * @param account 帳號 (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getApiPortfolio",
        summary = "查詢帳號庫存",
        description = "查詢帳號庫存",
        tags = { "Portfolio" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = GetPortfolioResponseDTO.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/portfolio/{account}",
        produces = { "application/json" }
    )
    
    ResponseEntity<List<GetPortfolioResponseDTO>> getApiPortfolio(
        @Parameter(name = "account", description = "帳號", required = true, in = ParameterIn.PATH) @PathVariable("account") String account
    ) throws Exception;


    /**
     * PUT /api/portfolio/{account} : 更新庫存
     * 更新庫存
     *
     * @param account 帳號 (required)
     * @param putPortfollioRequestDTO  (optional)
     * @return OK (status code 200)
     *         or Created (status code 201)
     */
    @Operation(
        operationId = "putApiPortfolioAccount",
        summary = "更新庫存",
        description = "更新庫存",
        tags = { "Portfolio" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK"),
            @ApiResponse(responseCode = "201", description = "Created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = CommonResponseDTO.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.PUT,
        value = "/api/portfolio/{account}",
        produces = { "application/json" },
        consumes = "application/json"
    )
    
    ResponseEntity<Void> putApiPortfolioAccount(
        @Parameter(name = "account", description = "帳號", required = true, in = ParameterIn.PATH) @PathVariable("account") String account,
        @Parameter(name = "PutPortfollioRequestDTO", description = "") @Valid @RequestBody(required = false) PutPortfollioRequestDTO putPortfollioRequestDTO
    ) throws Exception;

}
